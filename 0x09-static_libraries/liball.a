!<arch>
0-isupper.c/    0           0     0     644     273       `
#include "main.h"
/**
 * _isupper - this is what the main function does
 * @c: variable
 * Return: this is what's supposed to be returned to main
 */

int _isupper(int c)


{
  if (c >= 'A' && c <= 'Z')
    {
      return (1);
    }
  else
    {
      return (0);
    }

}

0-memset.c/     0           0     0     644     350       `
#include "holberton.h"
#include "main.h"
/**
 * *_memset - this is what the main function does
 * @s: variable
 * @b: variable
 * @n: variable
 * Return: this is what's supposed to be returned to main
 */

char *_memset(char *s, char b, unsigned int n)

{

  unsigned int i;

  for (i = 0; i < n; i++)
    {
      s[i] = b;
    }


  return (s);


}
0-strcat.c/     0           0     0     644     381       `
#include "main.h"
/**
 * *_strcat - this is what the main function does
 * @dest: variable
 * @src: variable
 * Return: this is what's supposed to be returned to main
 */


char *_strcat(char *dest, char *src)


{
  int a = 0;
  int b = 0;

  while (dest[a] != '\0')
    a++;

  while (src[b] != '\0')
    {
      dest[a] = src[b];
      a++;
      b++;
    }
  return (dest);


}

100-atoi.c/     0           0     0     644     206       `
#include "holberton.h"
#include "main.h"
/**
 * _atoi - this is what the main function does
 * @s: variable
 * Return: this is what's supposed to be returned to main
 */


int _atoi(char *s);


{








}
1-isdigit.c/    0           0     0     644     273       `
#include "main.h"
/**
 * _isdigit - this is what the main function does
 * @c: variable
 * Return: this is what's supposed to be returned to main
 */


int _isdigit(int c)

{
  if (c >= '0' && c <= '9')
    {
      return (1);
    }
  else
    {
      return (0);
    }

}

1-memcpy.c/     0           0     0     644     369       `
#include "holberton.h"
#include "main.h"
/**
 * *_memcpy - this is what the main function does
 * @dest: variable
 * @src: variable
 * @n: variable
 * Return: this is what's supposed to be returned to main
 */

char *_memcpy(char *dest, char *src, unsigned int n)

{
  unsigned int i;

  for (i = 0; i < n; i++)
    {
      dest[i] = src[i];
    }

  return (dest);

}

1-strncat.c/    0           0     0     644     438       `
#include "holberton.h"
#include "main.h"
/**
 * *_strncat - this is what the main function does
 * @dest: variable
 * @src: variable
 * @n: variable
 * Return: this is what's supposed to be returned to main
 */


char *_strncat(char *dest, char *src, int n)


{
  int a = 0;
  int b = 0;

  while (dest[a] != '\0')
    a++;

  while (src[b] != '\0' && b < n)
    {
      dest[a] = src[b];
      a++;
      b++;
    }
  return (dest);


}
2-strchr.c/     0           0     0     644     286       `
#include "holberton.h"
#include "main.h"
/**
 * *_strchr - this is what the main function does
 * @s: variable
 * @c: variable
 * Return: this is what's supposed to be returned to main
 */



char *_strchr(char *s, char c)

{

  while (*s != c)
    {
      s++;
    }

  return (s);

}
2-strlen.c/     0           0     0     644     262       `
#include "main.h"
/**
 * _strlen - this is what the main function does
 * @s: variable
 * Return: this is what's supposed to be returned to main
 */

int _strlen(char *s)


{

  int i = 0;

  while (*s != '\0')
    {
      s++;
      i++;
    }

  return (i);
}
2-strncpy.c/    0           0     0     644     467       `
#include "holberton.h"
#include "main.h"
/**
 * *_strncpy - this is what the main function does
 * @dest: variable
 * @src: variable
 * @n: variable
 * Return: this is what's supposed to be returned to main
 */




char *_strncpy(char *dest, char *src, int n)



{
  int a = 0;
  int b = 0;

  while (src[b] != '\0' && b < n)
    {
      dest[a] = src[b];
      a++;
      b++;
    }

  while (a < n)
    {
      dest[a] = '\0';
      a++;
    }
  return (dest);


}

3-islower.c/    0           0     0     644     274       `
#include <stdio.h>
/**
 * _islower - this is what the main function does
 * @c: variable
 * Return: this is what's supposed to be returned to main
 */

int _islower(int c)


{
  if (c >= 'a' && c <= 'z')
    {
      return (1);
    }
  else
    {
      return (0);
    }

}
3-puts.c/       0           0     0     644     259       `
#include "main.h"
/**
 * _puts - this is what the main function does
 * @str: variable
 * Return: this is what's supposed to be returned to main
 */


void _puts(char *str)

{

  while (*str != '\0')
    {
      _putchar (*str++);

    }
  _putchar('\n');

}

3-strcmp.c/     0           0     0     644     430       `
#include "holberton.h"
#include "main.h"
/**
 * _strcmp - this is what the main function does
 * @s1: variable
 * @s2: variable
 * Return: this is what's supposed to be returned to main
 */


int _strcmp(char *s1, char *s2)

{

  int a = 0;



  while ((s1[a] == s2[a]) && (s1[a] != '\0' && s2[a] != '\0'))
    {
      a++;
    }
  if (s1[a] == s2[a])
    {
      return (0);
    }
  else
    {
      return (*s1 - *s2);
    }

}
3-strspn.c/     0           0     0     644     472       `
#include "holberton.h"
#include "main.h"
/**
 * _strspn - this is what the main function does
 * @s: variable
 * @accept: variable
 * Return: this is what's supposed to be returned to main
 */



unsigned int _strspn(char *s, char *accept)

{

  int i;
  int j;
  int l = 0;

  for (i = 0; s[i] != '\0' && s[i] != ' ' && s[i] != ',' && s[i] != '.'; i++)
    {
      for (j = 0; accept[j] != '\0'; j++)
	if (s[i] == accept[j])
	  {
	    l++;
	  }
    }


  return (l);


}
4-isalpha.c/    0           0     0     644     302       `
#include <stdio.h>
/**
 * _isalpha - this is what the main function does
 * @c: variable
 * Return: this is what's supposed to be returned to main
 */


int _isalpha(int c)

{
  if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
    {
      return (1);
    }
  else
    {
      return (0);
    }

}
4-strpbrk.c/    0           0     0     644     422       `
#include "holberton.h"
#include "main.h"
/**
 * *_strpbrk - this is what the main function does
 * @s: variable
 * @accept: variable
 * Return: this is what's supposed to be returned to main
 */

char *_strpbrk(char *s, char *accept)


{

  int i;
  int j;

  for (i = 0; s[i] != '\0'; i++)
    {
      for (j = 0; accept[j] != '\0'; j++)
	if (s[i] == accept[j])
	  {
	    return (s + i);
	  }
    }

  return ('\0');


}
5-strstr.c/     0           0     0     644     415       `
#include "holberton.h"
#include "main.h"
/**
 * *_strstr - this is what the main function does
 * @haystack: variable
 * @needle: variable
 * Return: this is what's supposed to be returned to main
 */

char *_strstr(char *haystack, char *needle)

{

  int i;
  int j = 0;

  for (i = 0; haystack[i] != '\0'; i++)
    {

      if (haystack[i] == needle[j])
	{
	  return (haystack + i);
	}
    }

  return ('\0');

}

6-abs.c/        0           0     0     644     266       `
#include "main.h"
/**
 * _abs - this is what the main function does
 * @x: variable
 * Return: this is what's supposed to be returned to main
 */

int _abs(int x)
{

  if (x < 0)
    {
      x = x * -1;
      return (x);
    }
  else
    {
      return (x);
    }
}
9-strcpy.c/     0           0     0     644     257       `
#include "main.h"
/**
 * *_strcpy - this is what the main function does
 * @dest: variable
 * @scr: variable
 * Return: this is what's supposed to be returned to main
 */

char *_strcpy(char *dest, char *src)


{

  int c;
  c = *a:
  *a = *b;
  *b = c;

}

_putchar.c/     0           0     0     644     248       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
  return (write(1, &c, 1));
}
